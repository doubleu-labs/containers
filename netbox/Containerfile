ARG FEDORA_VERSION=42
ARG NETBOX_VERSION=4.3.1
ARG NETBOX_DOCKER_VERSION=3.3.0
ARG NETBOX_PLUGIN_DNS_VERSION=1.3.1
# ARG UNIT_VERSION=1.34.2

#===============================================================================

FROM registry.fedoraproject.org/fedora:${FEDORA_VERSION} AS builder

RUN mkdir -p /builder /scratch/opt/netbox

RUN dnf install -y --setopt=install_weak_deps=False --no-docs \
    gcc \
    gnupg2 \
    libpq-devel \
    make \
    openldap-devel \
    openssl-devel \
    libgsasl-devel \
    libtool-ltdl-devel \
    libxml2-devel \
    libxslt-devel \
    pcre2-devel \
    pkgconf-pkg-config \
    python-unversioned-command \
    python3-devel \
    uv \
    which \
    xmlsec1-devel \
    xmlsec1-openssl-devel

ARG FEDORA_VERSION
RUN dnf --installroot=/scratch --releasever=${FEDORA_VERSION} \
    install -y --setopt=install_weak_deps=False --no-docs --use-host-config \
    bzip2 \
    ca-certificates \
    curl \
    libpq \
    openldap \
    openssh-clients \
    openssl \
    pcre2 \
    python-unversioned-command \
    python3 \
    uv \
    xmlsec1-openssl && \
    dnf --installroot=/scratch clean all

ARG NETBOX_VERSION
RUN curl -L "https://github.com/netbox-community/netbox/archive/refs/tags/v${NETBOX_VERSION}.tar.gz" | \
    tar -C /builder -zxvf - && \
    ln -s /builder/netbox-${NETBOX_VERSION} /builder/netbox

ARG NETBOX_DOCKER_VERSION
RUN curl -L "https://github.com/netbox-community/netbox-docker/archive/refs/tags/${NETBOX_DOCKER_VERSION}.tar.gz" | \
    tar -C /builder -zxvf - && \
    ln -s /builder/netbox-docker-${NETBOX_DOCKER_VERSION} /builder/netbox-docker

# Using the master branch until a release supports GCC15
RUN curl -L "https://github.com/nginx/unit/archive/refs/heads/master.tar.gz" | \
    tar -C /builder -zxvf - && \
    ln -s /builder/unit-master /builder/unit

# ARG UNIT_VERSION
# RUN curl -L "https://github.com/nginx/unit/archive/refs/tags/${UNIT_VERSION}.tar.gz" | \
#     tar -C /builder -zxvf - && \
#     ln -s /builder/unit-${UNIT_VERSION} /builder/unit

RUN sed -i \
    -e '/gunicorn/d' \
    -e 's/social-auth-core/social-auth-core\[all\]/g' \
    -e 's/django-storages/django-storages\[azure,boto3,dropbox,google,libcloud,sftp\]/g' \
    /builder/netbox/requirements.txt

RUN /usr/bin/uv venv /scratch/opt/netbox/venv

ENV VIRTUAL_ENV=/scratch/opt/netbox/venv

RUN cp /builder/netbox-docker/requirements-container.txt /builder/netbox/

RUN /usr/bin/uv pip install \
    -r /builder/netbox/requirements.txt \
    -r /builder/netbox/requirements-container.txt

ARG NETBOX_PLUGIN_DNS_VERSION
RUN /usr/bin/uv pip install \
    "netbox-plugin-dns==${NETBOX_PLUGIN_DNS_VERSION}"

WORKDIR /builder/unit
RUN ./configure --openssl --group=unit --user=unit && \
    ./configure python && \
    make

RUN useradd netbox --no-log-init -d /nonexistent -U -M -s /sbin/nologin && \
    useradd unit --no-log-init -d /nonexistent -U -M -s /sbin/nologin

RUN grep -E "^netbox:.*" /etc/passwd >> /scratch/etc/passwd && \
    grep -E "^netbox:.*" /etc/group >> /scratch/etc/group && \
    grep -E "^netbox:.*" /etc/shadow >> /scratch/etc/shadow && \
    grep -E "^unit:.*" /etc/passwd >> /scratch/etc/passwd && \
    grep -E "^unit:.*" /etc/group >> /scratch/etc/group && \
    grep -E "^unit:.*" /etc/shadow >> /scratch/etc/shadow

#===============================================================================

FROM scratch

COPY --from=builder /scratch /
COPY --from=builder /builder/netbox/ /opt/netbox
COPY --from=builder /builder/netbox-docker/docker/configuration.docker.py /opt/netbox/netbox/netbox/configuration.py
COPY --from=builder /builder/netbox-docker/docker/ldap_config.docker.py /opt/netbox/netbox/netbox/ldap_config.py
COPY --from=builder /builder/netbox-docker/docker/docker-entrypoint.sh /opt/netbox/docker-entrypoint.sh
COPY --from=builder /builder/netbox-docker/docker/housekeeping.sh /opt/netbox/housekeeping.sh
COPY --from=builder /builder/netbox-docker/docker/launch-netbox.sh /opt/netbox/launch-netbox.sh
COPY --from=builder /builder/netbox-docker/configuration/ /etc/netbox/config/
COPY --from=builder --chown=unit:unit /builder/netbox-docker/docker/nginx-unit.json /etc/unit/

COPY --from=builder /builder/unit/build/sbin /usr/local/sbin/
COPY --from=builder /builder/unit/build/lib/unit /usr/local/lib/unit/

RUN mkdir -p /opt/netbox/netbox/static /opt/unit/{state,tmp}
RUN chown -R unit:netbox /opt/unit /opt/netbox/netbox/{media,reports,scripts}
RUN chmod -R g+w /opt/unit /opt/netbox/netbox/{media,reports,scripts}

RUN SECRET_KEY="dummyKeyWithMinimumLength-------------------------" \
    /opt/netbox/venv/bin/python -m mkdocs build --config-file /opt/netbox/mkdocs.yml \
    --site-dir /opt/netbox/netbox/project-static/docs/
RUN DEBUG="true" SECRET_KEY="dummyKeyWithMinimumLength-------------------------" \
    /opt/netbox/venv/bin/python /opt/netbox/netbox/manage.py collectstatic --no-input

USER netbox
WORKDIR /opt/netbox/netbox
ENV LANG=C.utf8
ENV PATH=/opt/netbox/venv/bin:$PATH
ENV VIRTUAL_ENV=/opt/netbox/venv
ENV UV_NO_CACHE=1
CMD [ "/opt/netbox/docker-entrypoint.sh", "/opt/netbox/launch-netbox.sh" ]

ARG NETBOX_VERSION NETBOX_DOCKER_VERSION NETBOX_PLUGIN_DNS_VERSION
LABEL org.opencontainers.image.source="https://github.com/doubleu-labs/containers" \
    org.opencontainers.image.authors="W Anders <w@doubleu.codes>" \
    org.opencontainers.image.title="netbox" \
    org.opencontainers.image.description="DoubleU Labs Netbox" \
    org.opencontainers.image.license="MIT" \
    com.netboxlabs.version="v${NETBOX_VERSION}" \
    com.netboxlabs.docker.version="V${NETBOX_DOCKER_VERSION}" \
    com.github.peteeckel.netbox-plugin-dns.version="${NETBOX_PLUGIN_DNS_VERSION}" \
    org.nginx.unit.version="master"
