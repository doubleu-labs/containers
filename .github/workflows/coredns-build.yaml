---
name: Build CoreDNS
on:
  push:
    paths:
    - 'coredns/*'
    - '!coredns/README.md'
  workflow_dispatch:
env:
  IMAGE: ${{ github.repository_owner }}/coredns
permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          - arch: linux/amd64
            arch-clean: linux-amd64
            runner: ubuntu-24.04
          - arch: linux/arm64
            arch-clean: linux-arm64
            runner: ubuntu-24.04-arm
          - arch: linux/arm/v7
            arch-clean: linux-arm-v7
            runner: ubuntu-24.04-arm
          - arch: linux/arm/v6
            arch-clean: linux-arm-v6
            runner: ubuntu-24.04-arm
    name: Build Container (${{ matrix.target.arch }})
    runs-on: ${{ matrix.target.runner }}
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4
    - name: Setup Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Github Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - name: Login to Quay
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_TOKEN }}
    - name: Build Container
      id: push
      uses: docker/build-push-action@v6
      with:
          builder: ${{ steps.buildx.outputs.name }}
          file: coredns/Containerfile
          platforms: ${{ matrix.target.arch }}
          push: true
    - name: Export Digest
      run: |
        mkdir -p ${{ runner.temp }}/digests
        digest="${{ steps.push.outputs.digest }}"
        touch "${{ runner.temp }}/digests/${digest#sha256:}"
    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        name: digests-linux-${{ matrix.target.arch-clean }}
        path: ${{ runner.temp }}/digests/*
        if-no-files-found: error
        retention-days: 1
  merge_platform_containers:
    name: Merge Platform Containers
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download Digests
      uses: actions/download-artifact@v4
      with:
        path: ${{ runner.temp }}/digests
        pattern: digests-*
        merge-multiple: true
    - name: Get Version From File
      id: version
      run: |
        echo "version=$(cat coredns/VERSION)" >> $GITHUB_OUTPUT
    - name: Login to Github Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - name: Create Manifest and Push to GHCR
      working-directory: ${{ runner.temp }}/digests
      run: |
        docker buildx imagetools create \
          -t "ghcr.io/${{ env.IMAGE }}:latest" \
          -t "ghcr.io/${{ env.IMAGE }}:${{ steps.version.outputs.version }}" \
          $(printf 'ghcr.io/${{ env.IMAGE }}@sha256:%s ' *)
    - name: Inspect GHCR Image
      run: |
        docker buildx imagetools inspect ghcr.io/${{ env.IMAGE }}:latest
        docker buildx imagetools inspect ghcr.io/${{ env.IMAGE }}:${{ steps.version.outputs.version }}
    - name: Login to Quay
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_TOKEN }}
    - name: Create Manifest and Push to Quay
      working-directory: ${{ runner.temp }}/digests
      run: |
        docker buildx imagetools create \
          -t "quay.io/${{ env.IMAGE }}:latest" \
          -t "quay.io/${{ env.IMAGE }}:${{ steps.version.outputs.version }}" \
          $(printf 'quay.io/${{ env.IMAGE }}@sha256:%s ' *)
    - name: Inspect GHCR Image
      run: |
        docker buildx imagetools inspect quay.io/${{ env.IMAGE }}:latest
        docker buildx imagetools inspect quay.io/${{ env.IMAGE }}:${{ steps.version.outputs.version }}
